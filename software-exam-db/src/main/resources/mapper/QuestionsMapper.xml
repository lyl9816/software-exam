<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="software.exam.db.mapper.QuestionsMapper">
  <resultMap id="BaseResultMap" type="software.exam.db.domain.Questions">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="lid" jdbcType="INTEGER" property="lid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
  </resultMap>
  <resultMap id="BaseResultMap1" type="software.exam.db.model.dto.QuestionsDto">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="lid" jdbcType="INTEGER" property="lid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="qid" jdbcType="INTEGER" property="qid" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="rqid" jdbcType="INTEGER" property="rqid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <resultMap id="CWResultMap" type="software.exam.db.model.dto.OnlineDto">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="qid" jdbcType="INTEGER" property="qid" />
    <result column="cid" jdbcType="INTEGER" property="cid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, lid, cid
  </sql>
  <select id="selectByExample" parameterType="software.exam.db.domain.QuestionsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from questions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from questions
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from questions
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="software.exam.db.domain.QuestionsExample">
    delete from questions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="software.exam.db.domain.Questions">
    insert into questions (id, title, lid, 
      cid)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{lid,jdbcType=INTEGER}, 
      #{cid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="software.exam.db.domain.Questions">
    insert into questions
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="lid != null">
        lid,
      </if>
      <if test="cid != null">
        cid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="lid != null">
        #{lid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        #{cid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="software.exam.db.domain.QuestionsExample" resultType="java.lang.Long">
    select count(*) from questions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update questions
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.lid != null">
        lid = #{record.lid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null">
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update questions
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      lid = #{record.lid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="software.exam.db.domain.Questions">
    update questions
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="lid != null">
        lid = #{lid,jdbcType=INTEGER},
      </if>
      <if test="cid != null">
        cid = #{cid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="software.exam.db.domain.Questions">
    update questions
    set title = #{title,jdbcType=VARCHAR},
      lid = #{lid,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
<!--随机75题-->
  <select id="limitAndRandAll" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * FROM questions WHERE lid = #{lid,jdbcType=INTEGER} ORDER BY RAND() LIMIT 75
  </select>
<!--    根据分类获取题目和对应的科目-->
<select id="selectAnalyze" resultMap="BaseResultMap1" parameterType="Integer">
  select q.*,a.*,s.`name` from questions q,`analyze` a,sort_course s  where a.qid=q.id and q.cid=s.id and q.lid=#{level,jdbcType=INTEGER}
</select>
<!--    根据分类获取题目和对应的科目以及正确答案-->
    <select id="selectAnswerByLevel" parameterType="int" resultMap="BaseResultMap1">
        select q.*,a.*,s.`name`,c.`content` from questions q,`analyze` a,sort_course s ,choices c
         where a.qid=q.id and q.cid=s.id and q.lid=#{level,jdbcType=INTEGER} and c.qid=q.id and c.status=1
    </select>
  <!--随机题库-->
  <select id="selectRandom" parameterType="java.lang.Integer" resultMap="BaseResultMap1">
    SELECT q.*,a.*, s.`name` FROM questions q ,`analyze` a,sort_course s
     WHERE lid = 1 and q.id=a.qid and q.cid=s.id ORDER BY RAND()
  </select>
<!-- 根据题目id获取题目、对应科目以及正确答案(错题库和我的收藏) -->
  <select id="selectAllByQid" parameterType="java.lang.Integer" resultMap="CWResultMap">
   SELECT q.*,a.*, s.`name` FROM questions q ,`analyze` a,sort_course s
     WHERE q.id=#{id,jdbcType=INTEGER} and q.id=a.qid and q.cid=s.id
  </select>

</mapper>